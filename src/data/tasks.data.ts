import {
  BarChart,
  Briefcase,
  Clock,
  Code,
  Database,
  FileText,
  Layers,
  Settings,
  Shield,
  Users,
} from "lucide-react"

import { MockUsers } from "@/src/data/users.data"
import type { ITask } from "@/src/shared/types/task.types"

export const MockTasks: ITask[] = [
  {
    id: "1",
    title: "Complete development project",
    icon: Code,
    dueDate: new Date(new Date().getTime() + 5 * 24 * 60 * 60 * 1000),
    users: [MockUsers[0], MockUsers[1], MockUsers[2]],
    subTasks: [
      { id: "1-1", title: "Write unit tests", isCompleted: false },
      { id: "1-2", title: "Conduct code review", isCompleted: true },
      { id: "1-3", title: "Deploy to production", isCompleted: false },
    ],
    comments: [
      "Need to speed up testing phase",
      "Code review completed successfully",
    ],
    resources: ["design-specs.pdf", "requirements.docx"],
    links: ["https://github.com/company/project-repo"],
  },
  {
    id: "2",
    title: "Prepare quarterly presentation",
    icon: FileText,
    dueDate: new Date(new Date().getTime() + 24 * 60 * 60 * 1000),
    users: [MockUsers[3], MockUsers[4]],
    subTasks: [
      { id: "2-1", title: "Collect performance data", isCompleted: true },
    ],
    comments: ["Data approved by leadership team"],
    resources: ["q3-stats.xlsx", "presentation-template.pptx"],
    links: [],
  },
  {
    id: "3",
    title: "Client onboarding meeting",
    icon: Briefcase,
    dueDate: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000),
    users: [MockUsers[0]],
    subTasks: [
      { id: "3-1", title: "Prepare contract", isCompleted: true },
      { id: "3-2", title: "Confirm meeting time", isCompleted: true },
      { id: "3-3", title: "Prepare demo materials", isCompleted: true },
      { id: "3-4", title: "Share agenda with client", isCompleted: true },
      { id: "3-5", title: "Book meeting room", isCompleted: false },
    ],
    comments: ["Client agreed to terms", "Reschedule signing for next week"],
    resources: ["service-agreement.pdf"],
    links: ["https://clients.company.com/portal"],
  },
  {
    id: "4",
    title: "Update database schema",
    icon: Database,
    dueDate: new Date(new Date().getTime() + 3 * 24 * 60 * 60 * 1000),
    users: [MockUsers[1], MockUsers[5]],
    subTasks: [
      { id: "4-1", title: "Review migration scripts", isCompleted: false },
      { id: "4-2", title: "Backup current database", isCompleted: false },
    ],
    comments: ["Waiting for approval from security team"],
    resources: ["schema-v2.sql"],
    links: [],
  },
  {
    id: "5",
    title: "Team building event",
    icon: Users,
    dueDate: new Date(new Date().getTime() + 14 * 24 * 60 * 60 * 1000),
    users: [MockUsers[2], MockUsers[4]],
    subTasks: [
      { id: "5-1", title: "Choose venue", isCompleted: true },
      { id: "5-2", title: "Send invitations", isCompleted: false },
    ],
    comments: ["Budget approved for the event"],
    resources: ["venue-options.docx"],
    links: [],
  },
  {
    id: "6",
    title: "Security audit",
    icon: Shield,
    dueDate: new Date(new Date().getTime() + 7 * 24 * 60 * 60 * 1000),
    users: [MockUsers[3], MockUsers[0], MockUsers[1]],
    subTasks: [
      { id: "6-1", title: "Review access logs", isCompleted: true },
      { id: "6-2", title: "Check firewall rules", isCompleted: false },
    ],
    comments: ["Critical vulnerabilities found in API"],
    resources: ["audit-checklist.pdf"],
    links: ["https://security.company.com/dashboard"],
  },
  {
    id: "7",
    title: "Infrastructure maintenance",
    icon: Settings,
    dueDate: new Date(new Date().getTime() + 2 * 24 * 60 * 60 * 1000),
    users: [MockUsers[5]],
    subTasks: [
      { id: "7-1", title: "Update server OS", isCompleted: false },
      { id: "7-2", title: "Restart services", isCompleted: false },
    ],
    comments: ["Scheduled downtime approved"],
    resources: ["maintenance-plan.docx"],
    links: [],
  },
  {
    id: "8",
    title: "Marketing campaign analysis",
    icon: BarChart,
    dueDate: new Date(new Date().getTime() + 4 * 24 * 60 * 60 * 1000),
    users: [MockUsers[4], MockUsers[2]],
    subTasks: [
      { id: "8-1", title: "Collect campaign metrics", isCompleted: true },
      { id: "8-2", title: "Prepare report", isCompleted: false },
    ],
    comments: ["ROI looks promising"],
    resources: ["campaign-stats.xlsx"],
    links: ["https://analytics.company.com/campaign123"],
  },
  {
    id: "9",
    title: "Product roadmap planning",
    icon: Layers,
    dueDate: new Date(new Date().getTime() + 6 * 24 * 60 * 60 * 1000),
    users: [MockUsers[0], MockUsers[3], MockUsers[5]],
    subTasks: [
      { id: "9-1", title: "Gather feature requests", isCompleted: true },
      { id: "9-2", title: "Prioritize backlog", isCompleted: false },
    ],
    comments: ["CEO requested new dashboard feature"],
    resources: ["roadmap-v3.pptx"],
    links: [],
  },
  {
    id: "10",
    title: "Time tracking implementation",
    icon: Clock,
    dueDate: new Date(new Date().getTime() + 9 * 24 * 60 * 60 * 1000),
    users: [MockUsers[1], MockUsers[4]],
    subTasks: [
      { id: "10-1", title: "Evaluate tools", isCompleted: true },
      { id: "10-2", title: "Setup test environment", isCompleted: false },
      { id: "10-3", title: "Train team", isCompleted: false },
    ],
    comments: ["Budget for tool approved"],
    resources: ["time-tracking-options.xlsx"],
    links: ["https://timetracking.demo.com"],
  },
]
